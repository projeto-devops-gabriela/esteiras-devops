name: esteira-teste-conexao

on:
  workflow_call:
    inputs:
      project-type:
        required: true
        type: string
        description: 'Type of project. Options: ClassLibrary, WindowsFormsApp'
      build-configuration:
        required: false
        type: string
        default: 'Release'
        description: 'Build configuration. Options: Release, Debug'

jobs:
  build-and-test:
    runs-on: windows-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup MSBuild
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v2

      # Find .sln path
      - name: Find solution
        id: find_sln
        run: |
          $sln = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
          echo "SLN_PATH=$($sln.FullName)" >> $env:GITHUB_ENV
        shell: pwsh

      # Restore NuGet packages
      - name: Restore NuGet packages
        run: nuget restore "$env:SLN_PATH"
        shell: pwsh

      # Build
      - name: Build
        run: msbuild "$env:SLN_PATH" /p:Configuration=${{ inputs.build-configuration }}
        shell: pwsh

      # Setup VSTest
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1

      # Run tests
      - name: Run tests
        run: |
          vstest.console.exe **/*Test*.dll --logger:trx

      # Sonar
      - name: Sonarqube Scanner
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ vars.ORGANIZATION_SONAR }}
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.verbose=true
            -Dsonar.exclusions=**/bin/**/*,**/obj/**/*,**/packages/**/*

      # Download nuget.exe
      - name: Download nuget.exe
        if: ${{ inputs.project-type == 'ClassLibrary' }}
        run: |
          curl -o nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

      - name: Find .csproj path
        if: ${{ inputs.project-type == 'ClassLibrary' }}
        id: find-csproj
        run: |
          echo "csproj_path=$(find . -type f -name '*.csproj' | grep -v '/[Tt]est' | head -n 1)" >> $GITHUB_OUTPUT
        shell: bash

      # Pack the NuGet package
      - name: Pack NuGet package
        if: ${{ inputs.project-type == 'ClassLibrary' }}
        run: |
          $version = "1.0.${{ github.run_number }}"
          ./nuget.exe pack ${{ steps.find-csproj.outputs.csproj_path }} -Properties Configuration=${{ inputs.build-configuration }} -Version $version -OutputDirectory ./nupkg
        shell: pwsh
      
      # Authenticate and Publish to GitHub Packages
      - name: Authenticate and Publish to GitHub Packages
        if: ${{ inputs.project-type == 'ClassLibrary' }}
        run: |
          nuget.exe sources add -Name "github" -Source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" -Username ${{ github.actor }} -Password ${{ secrets.GITHUB_TOKEN }}
          nuget.exe push **/*.nupkg -Source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" -ApiKey ${{ secrets.GITHUB_TOKEN }} -SkipDuplicate
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Prepare artifacts folders
      - name: Prepare artifacts folder (excluding Test folders)
        if: ${{ inputs.project-type == 'WindowsFormsApp' }}
        run: |
          mkdir -p artifacts
          find . -type f -path "*/bin/${{ inputs.build-configuration }}/*" \
          ! -path "*/*Test*/bin/*" \
          ! -path "*/*Tests*/bin/*" \
          -exec cp --parents {} artifacts/ \;
        shell: bash

      # Upload build artifacts for CD
      - name: Upload build artifacts
        if: ${{ inputs.project-type == 'WindowsFormsApp' }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: artifacts/

  publish:
    if: ${{ inputs.project-type == 'WindowsFormsApp' }}
    runs-on: windows-latest
    needs: build-and-test
    steps:
      # Download the build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build

      # Deploy for github releases
      - name: Deploy to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          files: build/**/*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}