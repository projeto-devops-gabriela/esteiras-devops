name: Build Java

on:
  workflow_call:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Localizar arquivo mvnw
        id: find-mvnw
        shell: bash
        run: echo "MAVEN_DIR=$(dirname $(find . -name 'mvnw'))" >> $GITHUB_ENV

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ vars.JAVA_VERSION }}

      - name: Permitir execucao do mvnw
        shell: bash
        run: chmod +x ./mvnw
        working-directory: ${{ env.MAVEN_DIR }}

      - name: Build com Maven
        shell: bash
        run: ./mvnw clean install
        working-directory: ${{ env.MAVEN_DIR }}

      - name: Executar testes
        shell: bash
        run: ./mvnw test clean verify org.jacoco:jacoco-maven-plugin:0.8.10:report
        working-directory: ${{ env.MAVEN_DIR }}

      - name: Instalar jq (Windows)
        if: runner.os == 'Windows'
        run: choco install jq -y
        shell: powershell

      - name: Verificar ou criar projeto no SonarCloud
        shell: bash
        run: |
          PROJECT_KEY="projeto-devops-gabriela_projeto-teste-java"
          ORG="projeto-devops-gabriela"

          echo "Verificando existência do projeto '$PROJECT_KEY'..."

          RESPONSE=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/projects/search?projects=$PROJECT_KEY")
          COUNT=$(echo "$RESPONSE" | jq ".components | length")

          if [ "$COUNT" -eq 0 ]; then
            echo "Criando projeto '$PROJECT_KEY'..."
            curl -s -X POST "https://sonarcloud.io/api/projects/create" \
              -u "${SONAR_TOKEN}:" \
              -d "name=$PROJECT_KEY" \
              -d "project=$PROJECT_KEY" \
              -d "organization=$ORG"
          else
            echo "Projeto '$PROJECT_KEY' já existe no SonarCloud."
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Analise SonarCloud
        shell: bash
        run: |
          ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }} \
            -Dsonar.organization=${{ vars.ORGANIZATION_SONAR }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${SONAR_TOKEN} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.exclusions=**/*Test.java,**/test/** \
            -Dsonar.tests=src/test \
            -Dsonar.test.inclusions=**/*Test.java,**/test/** \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.verbose=true 
        working-directory: ${{ env.MAVEN_DIR }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publicar artefato
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: demo-artifact
          path: ${{ env.MAVEN_DIR }}/target/*.jar