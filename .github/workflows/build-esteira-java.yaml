name: Build Java

on:
  workflow_call:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout codigo
        uses: actions/checkout@v4

      - name: Localizar arquivo mvnw
        id: find-mvnw
        shell: bash
        run: echo "MAVEN_DIR=$(dirname $(find . -name 'mvnw'))" >> $GITHUB_ENV

      - name: Desfazer shallow clone
        shell: bash
        run: git fetch --unshallow

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ vars.JAVA_VERSION }}

      - name: Permitir execucao do mvnw
        shell: bash
        run: chmod +x ./mvnw
        working-directory: ${{ env.MAVEN_DIR }}

      - name: Build com Maven
        shell: bash
        run: ./mvnw clean install
        working-directory: ${{ env.MAVEN_DIR }}

      - name: Executar testes
        shell: bash
        run: ./mvnw test clean verify org.jacoco:jacoco-maven-plugin:0.8.10:report
        working-directory: ${{ env.MAVEN_DIR }}

      - name: Criar projeto no SonarCloud via API
        shell: bash
        run: |
          curl -X POST "https://sonarcloud.io/api/projects/create" \
            -u "${SONAR_TOKEN}:" \
            -d "name=${{ github.repository_owner }}_${{ github.event.repository.name }}" \
            -d "project=${{ github.repository_owner }}_${{ github.event.repository.name }}" \
            -d "organization=${{ vars.ORGANIZATION_SONAR }}"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Analise SonarCloud
        shell: bash
        run: |
          ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }} \
            -Dsonar.organization=${{ vars.ORGANIZATION_SONAR }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${SONAR_TOKEN} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.verbose=true
        working-directory: ${{ env.MAVEN_DIR }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publicar artefato
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: demo-artifact
          path: ${{ env.MAVEN_DIR }}/target/*.jar